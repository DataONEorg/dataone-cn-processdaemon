#!/bin/bash

# source the debconf library
if [ -e "/usr/share/debconf/confmodule" ]; then
    . /usr/share/debconf/confmodule
else
    echo "debconf must be installed. Exiting."
    exit 1
fi

LONG_DATE=`date +%Y%m%d%H%M%S`
D1_CONF=/etc/dataone
NODE_PROPS="$D1_CONF/node.properties"
D1_HZ_PROCESS_PROPS="${D1_CONF}/process/dataoneHazelcast.properties"
PROCESS_PORT=5702

# functions to echo to STDERR or the install log instead of STDOUT
logError () {
    echo -e "$@" 1>&2
}

log () {
    now=$(date "+%Y-%m-%d %H:%M:%S %Z: ")
    echo -e "${now}$@" >> ${D1_LOG_DIR}/dataone-cn-processdaemon.install.log
}

chmod +x /etc/init.d/d1-processing

update-rc.d -f d1-processing remove
#update-rc.d d1-processing defaults 99


#these will need to be configured per environment
cp /usr/share/dataone-cn-processdaemon/debian/hazelcast.xml ${D1_CONF}/process/hazelcast.xml
cp /usr/share/dataone-cn-processdaemon/debian/synchronization.properties ${D1_CONF}/process/synchronization.properties
cp /usr/share/dataone-cn-processdaemon/debian/logAggregation.properties ${D1_CONF}/process/logAggregation.properties
cp /usr/share/dataone-cn-processdaemon/debian/replication.properties ${D1_CONF}/process/replication.properties
cp /usr/share/dataone-cn-processdaemon/debian/d1client.properties ${D1_CONF}/process/d1client.properties

#HOSTNAME=$(/bin/hostname -f)

## replace the token HOSTNAME in the site file to a hostname as found in debian backend db
db_get dataone-cn-os-core/cn.hostname
HOSTNAME=$RET

if [ "$HOSTNAME" != "" ]
then
  sed -i.bak  's/SERVER_NAME/'${HOSTNAME}'/' ${D1_CONF}/process/logAggregation.properties
  sed -i.bak  's/SERVER_NAME/'${HOSTNAME}'/' ${D1_CONF}/process/d1client.properties
else
  log "HOSTNAME can not be set in ${D1_CONF}/process synchronization.properties,d1client.properties  or logAggregation.properties"
fi

# replace the IPs of the cn.iplist in node.properties so as to set them in hazelcast.xml
#CN_IPLIST=`egrep 'cn.iplist=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
# set the properties associated with this context
IPLIST_LABEL="cn.iplist"
IPLIST=""
if [ -e ${NODE_PROPS} ]; then
	# Fetch the context's ip list from the debconf database
	db_get dataone-cn-os-core/${IPLIST_LABEL}
	IPLIST=${RET}

else
	log "Couldn't set the IP list correctly."
	IPLIST="127.0.0.1"
fi
# add in ports for the hazelcast client, NOTE THE PORT IS HARDCODED, probably should be configured
IPLISTwPORT=$(sed  --regexp-extended "s/(([0-9]{1,3}\.){3}[0-9]{1,3})/\0:${PROCESS_PORT}/g" <<< $IPLIST)
	
#add in commas
CN_IPLIST=${IPLIST// /, }
CN_IPLISTwPORT=${IPLISTwPORT// /, }

#place iplist value into dataoneHazelcast.properties at dataone.hazelcast.iplist
sed -i.bak "s/\(dataone\.hazelcast\.iplist *=\).*/\1${CN_IPLIST}/" ${D1_HZ_PROCESS_PROPS}
sed -i.bak "s/\(dataone\.hazelcast\.process\.clientiplist *=\).*/\1${CN_IPLIST}/" ${D1_HZ_PROCESS_PROPS}

chown -R tomcat7:tomcat7 /etc/dataone/process

cp /usr/share/dataone-cn-processdaemon/d1_process_daemon.jar /usr/share/java
chown -R tomcat7:tomcat7 /usr/share/java/d1_process_daemon.jar

##################################################################
# Set up logging for background processes
##################################################################
if [ ! -e "/var/log/dataone/daemon" ]
then
	mkdir  /var/log/dataone/daemon
	chown tomcat7:tomcat7 /var/log/dataone/daemon
fi

if [ ! -e "/var/log/dataone/synchronize" ]
then
	mkdir  /var/log/dataone/synchronize
	chown tomcat7:tomcat7 /var/log/dataone/synchronize
fi

if [ ! -e "/var/log/dataone/replicate" ]
then
	mkdir  /var/log/dataone/replicate
	chown tomcat7:tomcat7 /var/log/dataone/replicate
fi

if [ ! -e "/var/log/dataone/logAggregate" ]
then
	mkdir  /var/log/dataone/logAggregate
	chown tomcat7:tomcat7 /var/log/dataone/logAggregate
fi


###############################################################################
# Configure Postgres
###############################################################################
PG=postgresql
PG_CONF=/etc/postgresql/9.1/main
PG_USER=postgres

REPLICATION_HISTORY_DB=d1-replication-history
REPLICATION_HISTORY_DB_USER=replicationHistory
REPLICATION_HISTORY_DB_PASS=replicationHistory

## modify pg_hba.conf
PG_HBA_IS_MODIFIED=`grep "${REPLICATION_HISTORY_DB} ${REPLICATION_HISTORY_DB_USER}" ${PG_CONF}/pg_hba.conf`
if [ "${PG_HBA_IS_MODIFIED}" == "" ]
then
  echo "backing up ${PG_CONF}/pg_hba.conf to ${PG_CONF}/pg_hba.conf.bak.replication.history"
  cp ${PG_CONF}/pg_hba.conf ${PG_CONF}/pg_hba.conf.bak.replication.history
  chown ${PG_USER} ${PG_CONF}/pg_hba.conf
  chgrp ${PG_USER} ${PG_CONF}/pg_hba.conf

  echo "appending 'host ${REPLICATION_HISTORY_DB} ${REPLICATION_HISTORY_DB_USER} 127.0.0.1 255.255.255.255 password' to ${PG_CONF}/pg_hba.conf"
  echo "host ${REPLICATION_HISTORY_DB} ${REPLICATION_HISTORY_DB_USER} 127.0.0.1 255.255.255.255 password" >> ${PG_CONF}/pg_hba.conf
fi

## create replication history  schema and user
echo "Creating replication history database schema"
su ${PG_USER} -c "createdb ${REPLICATION_HISTORY_DB}"

echo "Creating replication history db user - replicationHistory" 
su ${PG_USER} -c "psql -c \"CREATE USER ${REPLICATION_HISTORY_DB_USER} WITH UNENCRYPTED PASSWORD '${REPLICATION_HISTORY_DB_PASS}'\""

## Restart the postgres db
echo "Restarting postgres database"
/etc/init.d/${PG} restart
######################################################

iplistArray=($IPLIST)
for ip in "${iplistArray[@]}"; do
	IP_ADDRESS=${ip}
	log "Adding 'ufw allow to any port ${PROCESS_PORT} from ${IP_ADDRESS}' rule"	  
	ufw allow to any port ${PROCESS_PORT} from ${IP_ADDRESS}
done

## Update DateONE Version Info Doc
java -jar /usr/share/dataone-cn-version-tool/dataone-cn-version-tool.jar -F/usr/share/dataone-cn-version-tool/version-tool.properties -html > /var/www/cn-version.html

echo "Start Sychronization with /etc/init.d/d1-processing start"





